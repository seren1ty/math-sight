{"version":3,"sources":["types/types.ts","utils/ms-localStorage.ts","model/mathQuestion.ts","context/session.context.tsx","components/mathQuestions.component.tsx","components/leftContainer.component.tsx","components/rightContainer.component.tsx","pages/quizPageA.tsx","pages/quizPageS.tsx","App.js","index.js"],"names":["Operation","setMsUserId","userId","localStorage","setItem","JSON","stringify","setMsOperationType","operationType","getMsOperationType","rawOperationType","getItem","parse","ADD","setMsHighScore","highScore","MathQuestion","id","numberOne","numberTwo","operation","this","one","Number","two","MINUS","MULTIPLY","DIVIDE","SessionContext","React","createContext","SessionProvider","children","useState","rawUserId","getMsUserId","setUserId","numberRangeAS","useRef","numberRangeM","numberRangeD","setOperationType","questions","setQuestions","answers","setAnswers","showResults","setShowResults","rawHighScore","getMsHighScore","setHighScore","rawCurrentScore","getMsCurrentScore","currentScore","setCurrentScore","useEffect","setMsCurrentScore","generateQuestions","initUser","useCallback","newUserId","newNumberRangeAS","newNumberRangeM","newNumberRangeD","current","resetFields","range","newQuestions","loopCount","maxLoops","idx","numA","Math","floor","random","numB","question","push","checkAnswer","getResult","Provider","value","MathQuestions","session","useContext","handleChangeAnswer","questionId","answer","newAnswers","length","getOperationIcon","isAnswerEnabled","readAnswer","Box","marginX","flexDirection","map","display","m","fontSize","fontWeight","StyledQuestion","pr","width","flexGrow","StyledAnswerInput","type","onChange","e","target","disabled","StyledResult","pl","lineHeight","correct","styled","input","props","LeftContainer","ml","mb","RightContainer","increaseCurrentScore","newScore","updatedCurrentScore","increaseHighScore","updatedHighScore","handleChangeOperationType","calculateCorrectAnswers","filter","checkAnswers","correctlyAnsweredQuestions","marginTop","StyledOperationSelect","labelId","MenuItem","mt","StyledTextarea","StyledCheckAnswers","variant","color","onClick","StyledNewQuestions","textAlign","Select","textarea","Button","QuizPageA","QuizPageS","App","className","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e9108f0.chunk.js","sourcesContent":["import { MathQuestion } from \"model/mathQuestion\";\r\n\r\nexport type Session = {\r\n  userId: string;\r\n  operationType: Operation;\r\n  questions: MathQuestion[];\r\n  answers: number[];\r\n  showResults: boolean;\r\n  highScore: number;\r\n  currentScore: number;\r\n  initUser: (userId: string, numberRangeAS: number, numberRangeM: number, numberRangeD: number) => void;\r\n  setUserId: (userId: string) => void;\r\n  setOperationType: (operation: Operation) => void;\r\n  setQuestions: (questions: MathQuestion[]) => void;\r\n  setAnswers: (answers: number[]) => void;\r\n  setShowResults: (showResults: boolean) => void;\r\n  setHighScore: (highScore: number) => void;\r\n  setCurrentScore: (currentScore: number) => void;\r\n  resetFields: () => void;\r\n  generateQuestions: () => void;\r\n  checkAnswer: (question: MathQuestion) => boolean;\r\n}\r\n\r\nexport enum Operation {\r\n  ADD,\r\n  MINUS,\r\n  MULTIPLY,\r\n  DIVIDE,\r\n}","import { Operation } from \"types/types\";\r\n\r\nexport const setMsUserId = (userId: string): void => {\r\n  localStorage.setItem(\"mathSight-userId\", JSON.stringify(userId));\r\n}\r\n\r\nexport const getMsUserId = (): string => {\r\n  const rawUserId = localStorage.getItem(\"mathSight-userId\");\r\n\r\n  if (!rawUserId) {\r\n    setMsUserId(\"\");\r\n    return \"\";\r\n  }\r\n\r\n  return JSON.parse(rawUserId);\r\n}\r\n\r\nexport const setMsOperationType = (userId: string, operationType: Operation): void => {\r\n  localStorage.setItem(\"mathSight-operationType-\" + userId, JSON.stringify(operationType));\r\n}\r\n\r\nexport const getMsOperationType = (userId: string): Operation => {\r\n  const rawOperationType = localStorage.getItem(\"mathSight-operationType-\" + userId);\r\n\r\n  if (!rawOperationType) {\r\n    setMsOperationType(userId, Operation.ADD);\r\n    return 0;\r\n  }\r\n\r\n  return JSON.parse(rawOperationType);\r\n}\r\n\r\nexport const setMsHighScore = (userId: string, highScore: number): void => {\r\n  localStorage.setItem(\"mathSight-highScore-\" + userId, JSON.stringify(highScore));\r\n}\r\n\r\nexport const getMsHighScore = (userId: string): number => {\r\n  const rawHighScore = localStorage.getItem(\"mathSight-highScore-\" + userId);\r\n\r\n  if (!rawHighScore) {\r\n    setMsHighScore(userId, 0);\r\n    return 0;\r\n  }\r\n\r\n  return Number(JSON.parse(rawHighScore));\r\n}\r\n\r\nexport const setMsCurrentScore = (userId: string, currentScore: number): void => {\r\n  localStorage.setItem(\"mathSight-currentScore-\" + userId, JSON.stringify(currentScore));\r\n}\r\n\r\nexport const getMsCurrentScore = (userId: string): number => {\r\n  const rawCurrentScore = localStorage.getItem(\"mathSight-currentScore-\" + userId);\r\n\r\n  if (!rawCurrentScore) {\r\n    setMsOperationType(userId, 0);\r\n    return 0;\r\n  }\r\n\r\n  return Number(JSON.parse(rawCurrentScore));\r\n}\r\n","import { Operation } from \"types/types\";\r\n\r\nexport class MathQuestion {\r\n  id: number;\r\n  numberOne: number;\r\n  numberTwo: number;\r\n  operation: Operation;\r\n\r\n  constructor(id: number, numberOne: number, numberTwo: number, operation?: Operation) {\r\n    this.id = id;\r\n    this.numberOne = numberOne;\r\n    this.numberTwo = numberTwo;\r\n    this.operation = operation || Operation.ADD;\r\n  }\r\n\r\n  getResult(): number {\r\n    const one = Number(this.numberOne);\r\n    const two = Number(this.numberTwo);\r\n\r\n    switch(this.operation) {\r\n      case Operation.MINUS:\r\n        return one - two;\r\n      case Operation.MULTIPLY:\r\n        return one * two;\r\n      case Operation.DIVIDE:\r\n        return one / two;\r\n      default:\r\n        return one + two;\r\n    }\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getMsCurrentScore,\r\n  getMsHighScore,\r\n  getMsUserId,\r\n  setMsOperationType,\r\n  setMsHighScore,\r\n  setMsUserId,\r\n  getMsOperationType,\r\n  setMsCurrentScore\r\n} from '../utils/ms-localStorage';\r\nimport { Operation, Session } from '../types/types';\r\nimport { MathQuestion } from 'model/mathQuestion';\r\n\r\ntype ContextProps = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst SessionContext = React.createContext<Session | null>(null);\r\n\r\nconst SessionProvider = ({children}: ContextProps) => {\r\n\r\n  const [userId, setUserId] = useState<string>(getMsUserId());\r\n\r\n  const numberRangeAS = React.useRef<number>(0);\r\n  const numberRangeM = React.useRef<number>(0);\r\n  const numberRangeD = React.useRef<number>(0);\r\n\r\n  const [operationType, setOperationType] = React.useState(getMsOperationType(userId));\r\n\r\n  const [difficulty, setDifficulty] = React.useState(getMsOperationType(userId));\r\n\r\n  const [questions, setQuestions] = useState<MathQuestion[]>([]);\r\n\r\n  const [answers, setAnswers] = useState<number[]>([]);\r\n\r\n  const [showResults, setShowResults] = useState<boolean>(false);\r\n\r\n  const [highScore, setHighScore] = useState<number>(getMsHighScore(userId));\r\n\r\n  const [currentScore, setCurrentScore] = useState<number>(getMsCurrentScore(userId));\r\n\r\n  useEffect(() => {\r\n    setMsUserId(userId);\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (!userId)\r\n      return;\r\n\r\n    setMsHighScore(userId, highScore);\r\n  }, [userId, highScore]);\r\n\r\n  useEffect(() => {\r\n    if (!userId)\r\n      return;\r\n\r\n    setMsCurrentScore(userId, currentScore);\r\n  }, [userId, currentScore]);\r\n\r\n  useEffect(() => {\r\n    if (!userId)\r\n      return;\r\n\r\n    setMsOperationType(userId, operationType);\r\n\r\n    generateQuestions();\r\n  }, [userId, operationType]);\r\n\r\n  const initUser = React.useCallback((newUserId: string, newNumberRangeAS: number, newNumberRangeM: number, newNumberRangeD: number) => {\r\n    numberRangeAS.current = newNumberRangeAS;\r\n    numberRangeM.current = newNumberRangeM;\r\n    numberRangeD.current = newNumberRangeD;\r\n    setUserId(newUserId);\r\n  }, []);\r\n\r\n  const resetFields = React.useCallback(() => {\r\n    setQuestions([]);\r\n    setAnswers([]);\r\n    setShowResults(false);\r\n    setHighScore(highScore);\r\n    setCurrentScore(currentScore);\r\n  }, [setQuestions, setAnswers, setShowResults, setHighScore, highScore, setCurrentScore, currentScore]);\r\n\r\n  const generateQuestions = React.useCallback(() => {\r\n    resetFields();\r\n\r\n    const newQuestions: MathQuestion[] = [];\r\n\r\n    let range;\r\n\r\n    if (operationType === Operation.ADD || operationType === Operation.MINUS) {\r\n      range = numberRangeAS.current;\r\n    } else if (operationType === Operation.MULTIPLY) {\r\n      range = numberRangeM.current;\r\n    } else {\r\n      range = numberRangeD.current;\r\n    }\r\n\r\n    let loopCount = 0;\r\n    const maxLoops = 100000;\r\n\r\n    for (let idx = 0; idx < 10; idx++) {\r\n      loopCount++;\r\n\r\n      let numA = Math.floor(Math.random() * range);\r\n      let numB = Math.floor(Math.random() * range);\r\n\r\n      if (loopCount >= maxLoops) {\r\n        break;\r\n      }\r\n\r\n      if (operationType === Operation.DIVIDE) {\r\n        if (numA === 1 || numB === 1) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n\r\n        while (numA === numB || numA % numB !== 0) {\r\n          loopCount++;\r\n          numB = Math.floor(Math.random() * range);\r\n\r\n          if (loopCount >= maxLoops) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (operationType === Operation.MULTIPLY || operationType === Operation.DIVIDE) {\r\n        if (numA === 0 || numB === 0) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if (operationType === Operation.MINUS || operationType === Operation.DIVIDE) {\r\n        if (numA < numB) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      const question = new MathQuestion(idx, numA, numB, operationType);\r\n      newQuestions.push(question);\r\n    }\r\n\r\n    setQuestions(newQuestions);\r\n  }, [numberRangeAS, numberRangeM, numberRangeD, operationType, resetFields]);\r\n\r\n  const checkAnswer = React.useCallback((question: MathQuestion) => {\r\n    return Number(answers[question.id]) === Number(question.getResult());\r\n  }, [answers]);\r\n\r\n  return (\r\n    <SessionContext.Provider value={{\r\n      userId,\r\n      operationType,\r\n      questions,\r\n      answers,\r\n      showResults,\r\n      highScore,\r\n      currentScore,\r\n      initUser,\r\n      setUserId,\r\n      setOperationType,\r\n      setQuestions,\r\n      setAnswers,\r\n      setShowResults,\r\n      setHighScore,\r\n      setCurrentScore,\r\n      resetFields,\r\n      generateQuestions,\r\n      checkAnswer,\r\n    }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n}\r\n\r\nexport { SessionContext, SessionProvider };","import { Box } from \"@material-ui/core\";\r\nimport { SessionContext } from \"context/session.context\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Operation } from \"types/types\";\r\n\r\nconst MathQuestions = () => {\r\n\r\n  const session = React.useContext(SessionContext);\r\n\r\n  const handleChangeAnswer = React.useCallback((questionId, answer) => {\r\n    if (!session) {\r\n      return;\r\n    }\r\n\r\n    const newAnswers = [...session.answers];\r\n\r\n    if (newAnswers.length <= questionId)\r\n      newAnswers.push(answer);\r\n    else\r\n      newAnswers[questionId] = answer;\r\n\r\n    session.setAnswers(newAnswers);\r\n  }, [session]);\r\n\r\n  const getOperationIcon = React.useCallback((operation: Operation) => {\r\n    switch(operation) {\r\n      case Operation.MINUS:\r\n        return \"-\";\r\n      case Operation.MULTIPLY:\r\n        return \"x\";\r\n      case Operation.DIVIDE:\r\n        return \"/\";\r\n      default:\r\n        return \"+\";\r\n    }\r\n  }, []);\r\n\r\n  const isAnswerEnabled = React.useCallback((questionId: number) => {\r\n    if (!session) {\r\n      return false;\r\n    }\r\n\r\n    return questionId === 0 || questionId < session?.answers.length + 1;\r\n  }, [session]);\r\n\r\n  const readAnswer = React.useCallback((questionId: number) => {\r\n    const answer = session?.answers[questionId];\r\n    return answer || \"\";\r\n  }, [session]);\r\n\r\n  React.useEffect(() => {\r\n    session?.generateQuestions();\r\n  }, []);\r\n\r\n  if (!session) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box marginX={5}>\r\n      <Box flexDirection=\"column\">\r\n      {\r\n        session.questions.map((question) => (\r\n          <Box key={question.id} display=\"flex\" m={1.5} fontSize={26} fontWeight={700}>\r\n            <StyledQuestion>\r\n              <Box pr={1} width=\"80px\">{question.numberOne}</Box>\r\n              <Box pr={1} flexGrow={1}>{getOperationIcon(question.operation)}</Box>\r\n              <Box width=\"80px\">{question.numberTwo}</Box>\r\n            </StyledQuestion>\r\n            <StyledAnswerInput\r\n              type=\"number\"\r\n              value={readAnswer(question.id)}\r\n              onChange={(e) => handleChangeAnswer(question.id, e.target.value)}\r\n              disabled={!isAnswerEnabled(question.id)}\r\n            />\r\n            <StyledResult\r\n              width=\"100px\"\r\n              pl={3}\r\n              lineHeight=\"30px\"\r\n              correct={session.checkAnswer(question)}\r\n            >\r\n            {\r\n              session.showResults &&\r\n              <Box>{question.getResult()}</Box>\r\n            }\r\n            </StyledResult>\r\n          </Box>\r\n        ))\r\n      }\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MathQuestions;\r\n\r\nconst StyledQuestion = styled(Box)`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-right: 32px;\r\n  background: #d1dcf9;\r\n  border-radius: 10px;\r\n  font-size: 20px;\r\n  line-height: 35px;\r\n`\r\n\r\nconst StyledAnswerInput = styled.input`\r\n  width: 100px;\r\n  font-size: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 10px;\r\n  outline: none;\r\n  padding: 6px;\r\n\r\n  &:disabled {\r\n    border: 2px solid #cacaca;\r\n    background: #e0e0e0;\r\n  }\r\n`\r\n\r\nconst StyledResult = styled(Box)<{correct: boolean}>`\r\n  color: ${props => props.correct ? \"green\" : \"red\"};\r\n`\r\n","import { Box, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport MathQuestions from \"components/mathQuestions.component\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LeftContainer = () => {\r\n\r\n  return (\r\n    <Box>\r\n      <Box ml={8} mb={4}>\r\n        <h1>Mathsight</h1>\r\n      </Box>\r\n      <MathQuestions />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LeftContainer;\r\n","import { Box, Button, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport MathQuestions from \"components/mathQuestions.component\";\r\nimport { SessionContext } from \"context/session.context\";\r\nimport { MathQuestion } from \"model/mathQuestion\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Operation } from \"types/types\";\r\n\r\nconst RightContainer = () => {\r\n\r\n  const session = React.useContext(SessionContext);\r\n\r\n  const increaseCurrentScore = React.useCallback((newScore: number) => {\r\n    if (!session) {\r\n      return;\r\n    }\r\n\r\n    const updatedCurrentScore = session.currentScore + newScore;\r\n\r\n    session.setCurrentScore(updatedCurrentScore);\r\n  }, [session]);\r\n\r\n  const increaseHighScore = React.useCallback((newScore: number) => {\r\n    if (!session) {\r\n      return;\r\n    }\r\n\r\n    const updatedHighScore = session.currentScore + newScore;\r\n\r\n    if (updatedHighScore <= session.highScore) {\r\n      return;\r\n    }\r\n\r\n    session.setHighScore(updatedHighScore);\r\n  }, [session]);\r\n\r\n  const handleChangeOperationType = React.useCallback((e: React.ChangeEvent<{value: unknown}>) => {\r\n    session?.setOperationType(e.target.value as Operation);\r\n  }, [session]);\r\n\r\n  const calculateCorrectAnswers = React.useCallback(() => {\r\n    if (!session) {\r\n      return 0;\r\n    }\r\n\r\n    const correctlyAnsweredQuestions = session.questions.filter((question) => session.checkAnswer(question));\r\n    return correctlyAnsweredQuestions.length;\r\n  }, [session]);\r\n\r\n  const checkAnswers = React.useCallback(() => {\r\n    if (!session) {\r\n      return;\r\n    }\r\n\r\n    const correctlyAnsweredQuestions = calculateCorrectAnswers();\r\n\r\n    if (correctlyAnsweredQuestions === session.questions.length) {\r\n      increaseHighScore(session.questions.length);\r\n      increaseCurrentScore(session.questions.length);\r\n    } else {\r\n      increaseHighScore(correctlyAnsweredQuestions);\r\n      session.setCurrentScore(0);\r\n    }\r\n\r\n    session.setShowResults(true);\r\n  }, [session, calculateCorrectAnswers, increaseHighScore, increaseCurrentScore]);\r\n\r\n  if (!session) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box marginTop=\"20px\">\r\n        <StyledOperationSelect\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={session.operationType}\r\n          onChange={handleChangeOperationType}\r\n        >\r\n          <MenuItem value={Operation.ADD}>Add</MenuItem>\r\n          <MenuItem value={Operation.MINUS}>Minus</MenuItem>\r\n          <MenuItem value={Operation.MULTIPLY}>Multiply</MenuItem>\r\n          <MenuItem value={Operation.DIVIDE}>Divide</MenuItem>\r\n        </StyledOperationSelect>\r\n      </Box>\r\n      {\r\n        !session.showResults &&\r\n        <Box mt={2}>\r\n          <StyledTextarea />\r\n        </Box>\r\n      }\r\n      <Box flexDirection=\"column\" mt={2}>\r\n        <StyledCheckAnswers\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => checkAnswers()}\r\n          disabled={session.showResults || session.answers.length < session.questions.length}\r\n        >\r\n          Check Answers\r\n        </StyledCheckAnswers>\r\n        <StyledNewQuestions\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => session.generateQuestions()}\r\n            disabled={!session.showResults}\r\n          >\r\n            New Questions\r\n        </StyledNewQuestions>\r\n        {\r\n          session.showResults &&\r\n          <Box marginTop=\"60px\" fontSize={40} fontWeight={600} textAlign=\"center\">Correct: {calculateCorrectAnswers()}</Box>\r\n        }\r\n        <Box textAlign=\"center\">\r\n          <h1>Results</h1>\r\n        </Box>\r\n        <Box marginTop=\"20px\" fontSize={40} fontWeight={600} textAlign=\"center\">Current total: {session.currentScore}</Box>\r\n        <Box marginTop=\"20px\" fontSize={40} fontWeight={600} textAlign=\"center\">High score: {session.highScore}</Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RightContainer;\r\n\r\nconst StyledOperationSelect = styled(Select)`\r\n  width: 350px;\r\n  background: #d1dcf9;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n\r\n  &::before {\r\n    border: 0px;\r\n  }\r\n\r\n  &::after {\r\n    border: 0px;\r\n  }\r\n\r\n  &.MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 0px;\r\n  }\r\n\r\n  .MuiSelect-select:focus {\r\n    border-radius: 10px;\r\n    background: #d1dcf9;\r\n}\r\n`\r\n\r\nconst StyledTextarea = styled.textarea`\r\n  width: 350px;\r\n  height: 200px;\r\n  border: 3px solid #d1dcf9;\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n  padding: 15px;\r\n  outline: none;\r\n`\r\n\r\nconst StyledCheckAnswers = styled(Button)`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-right: 20px;\r\n  border-radius: 10px;\r\n  text-transform: none;\r\n`\r\n\r\nconst StyledNewQuestions = styled(Button)`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  text-transform: none;\r\n`","import { Box } from '@material-ui/core';\r\nimport LeftContainer from 'components/leftContainer.component';\r\nimport RightContainer from 'components/rightContainer.component';\r\nimport { SessionContext } from 'context/session.context';\r\nimport React from 'react';\r\n\r\nconst QuizPageA = () => {\r\n  const session = React.useContext(SessionContext);\r\n\r\n  React.useEffect(() => {\r\n    session?.initUser(\"a\", 1000, 12, 100);\r\n  },\r\n  []);\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <LeftContainer />\r\n      <RightContainer />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuizPageA;","import { Box } from '@material-ui/core';\r\nimport LeftContainer from 'components/leftContainer.component';\r\nimport RightContainer from 'components/rightContainer.component';\r\nimport { SessionContext } from 'context/session.context';\r\nimport React from 'react';\r\n\r\nconst QuizPageS = () => {\r\n  const session = React.useContext(SessionContext);\r\n\r\n  React.useEffect(() => {\r\n    session?.initUser(\"s\", 20, 6, 12);\r\n  },\r\n  []);\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <LeftContainer />\r\n      <RightContainer />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuizPageS;","import { SessionProvider } from \"context/session.context\";\nimport QuizPageA from \"pages/quizPageA\";\nimport QuizPageS from \"pages/quizPageS\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <SessionProvider>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/a\" exact component={QuizPageA} />\n            <Route path=\"/s\" exact component={QuizPageS} />\n          </Switch>\n        </div>\n      </SessionProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}