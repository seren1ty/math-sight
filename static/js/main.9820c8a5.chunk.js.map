{"version":3,"sources":["model/mathQuestion.ts","components/mathQuestions.component.tsx","components/mathContainer.component.tsx","pages/a.tsx","pages/s.tsx","App.js","index.js"],"names":["Operation","MathQuestion","id","numberOne","numberTwo","operation","this","ADD","one","Number","two","MINUS","MULTIPLY","DIVIDE","MathQuestions","userId","numberRangeAM","numberRangeM","numberRangeD","operationType","readCurrentScore","React","useCallback","rawCurrentScore","localStorage","getItem","JSON","parse","increaseCurrentScore","newScore","updatedCurrentScore","setItem","stringify","setCurrentScore","resetCurrentScore","readHighScore","rawHighScore","increaseHighScore","savedHighScore","updatedHighScore","setHighScore","useState","questions","setQuestions","answers","setAnswers","showResults","setShowResults","highScore","currentScore","handleChangeAnswer","questionId","answer","newAnswers","length","push","resetFields","generateQuestions","range","newQuestions","loopCount","maxLoops","idx","numA","Math","floor","random","numB","question","getOperationIcon","isAnswerEnabled","readAnswer","checkAnswer","getResult","calculateCorrectAnswers","filter","checkAnswers","correctlyAnsweredQuestions","useEffect","Box","display","marginX","flexDirection","map","m","fontSize","fontWeight","StyledQuestion","pr","width","flexGrow","StyledAnswerInput","type","value","onChange","e","target","disabled","StyledResult","pl","lineHeight","correct","margin","StyledCheckAnswers","variant","color","onClick","StyledNewQuestions","marginTop","textAlign","styled","input","props","Button","MathContainer","handleChange","setOperationType","rawOperationType","FormControl","InputLabel","StyledOperationSelect","labelId","MenuItem","Select","APage","SPage","App","className","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9820c8a5.chunk.js","sourcesContent":["export enum Operation {\r\n  ADD,\r\n  MINUS,\r\n  MULTIPLY,\r\n  DIVIDE,\r\n}\r\n\r\nexport class MathQuestion {\r\n  id: number;\r\n  numberOne: number;\r\n  numberTwo: number;\r\n  operation: Operation;\r\n\r\n  constructor(id: number, numberOne: number, numberTwo: number, operation?: Operation) {\r\n    this.id = id;\r\n    this.numberOne = numberOne;\r\n    this.numberTwo = numberTwo;\r\n    this.operation = operation || Operation.ADD;\r\n  }\r\n\r\n  getResult(): number {\r\n    const one = Number(this.numberOne);\r\n    const two = Number(this.numberTwo);\r\n\r\n    switch(this.operation) {\r\n      case Operation.MINUS:\r\n        return one - two;\r\n      case Operation.MULTIPLY:\r\n        return one * two;\r\n      case Operation.DIVIDE:\r\n        return one / two;\r\n      default:\r\n        return one + two;\r\n    }\r\n  }\r\n}","import { Box, Button } from \"@material-ui/core\";\r\nimport { MathQuestion, Operation } from \"model/mathQuestion\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype MathQuestionsProps = {\r\n  userId: string;\r\n  numberRangeAM: number;\r\n  numberRangeM: number;\r\n  numberRangeD: number;\r\n  operationType: Operation;\r\n}\r\n\r\nconst MathQuestions = ({ userId, numberRangeAM, numberRangeM, numberRangeD, operationType }: MathQuestionsProps) => {\r\n\r\n  const readCurrentScore = React.useCallback(() => {\r\n    const rawCurrentScore = localStorage.getItem(\"mathSight-currentScore-\" + userId);\r\n\r\n    return !!rawCurrentScore ? Number(JSON.parse(rawCurrentScore)) : 0;\r\n  }, [userId]);\r\n\r\n  const increaseCurrentScore = React.useCallback((newScore: number) => {\r\n    const updatedCurrentScore = readCurrentScore() + newScore;\r\n\r\n    localStorage.setItem(\"mathSight-currentScore-\" + userId, JSON.stringify(updatedCurrentScore));\r\n\r\n    setCurrentScore(updatedCurrentScore);\r\n  }, [userId, readCurrentScore]);\r\n\r\n  const resetCurrentScore = React.useCallback(() => {\r\n    localStorage.setItem(\"mathSight-currentScore-\" + userId, JSON.stringify(0));\r\n\r\n    setCurrentScore(0);\r\n  }, [userId]);\r\n\r\n  const readHighScore = React.useCallback(() => {\r\n    const rawHighScore = localStorage.getItem(\"mathSight-highScore-\" + userId);\r\n\r\n    return !!rawHighScore ? JSON.parse(rawHighScore) : 0;\r\n  }, [userId]);\r\n\r\n  const increaseHighScore = React.useCallback((newScore: number) => {\r\n    const savedHighScore = readHighScore();\r\n\r\n    const updatedHighScore = readCurrentScore() + newScore;\r\n\r\n    if (updatedHighScore <= savedHighScore) {\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(\"mathSight-highScore-\" + userId, JSON.stringify(updatedHighScore));\r\n\r\n    setHighScore(updatedHighScore);\r\n  }, [userId, readCurrentScore, readHighScore]);\r\n\r\n  const [questions, setQuestions] = React.useState<MathQuestion[]>([]);\r\n  const [answers, setAnswers] = React.useState<number[]>([]);\r\n  const [showResults, setShowResults] = React.useState<boolean>(false);\r\n  const [highScore, setHighScore] = React.useState<number>(readHighScore());\r\n  const [currentScore, setCurrentScore] = React.useState<number>(readCurrentScore());\r\n\r\n  const handleChangeAnswer = React.useCallback((questionId, answer) => {\r\n    const newAnswers = [...answers];\r\n\r\n    if (newAnswers.length <= questionId)\r\n      newAnswers.push(answer);\r\n    else\r\n      newAnswers[questionId] = answer;\r\n\r\n    setAnswers(newAnswers);\r\n  }, [answers]);\r\n\r\n  const resetFields = React.useCallback(() => {\r\n    setQuestions([]);\r\n    setAnswers([]);\r\n    setShowResults(false);\r\n    setHighScore(readHighScore());\r\n    setCurrentScore(readCurrentScore());\r\n  }, [setQuestions, setAnswers, setShowResults, setHighScore, readHighScore, setCurrentScore, readCurrentScore]);\r\n\r\n  const generateQuestions = React.useCallback(() => {\r\n    resetFields();\r\n\r\n    const newQuestions: MathQuestion[] = [];\r\n\r\n    let range;\r\n\r\n    if (operationType === Operation.ADD || operationType === Operation.MINUS) {\r\n      range = numberRangeAM;\r\n    } else if (operationType === Operation.MULTIPLY) {\r\n      range = numberRangeM;\r\n    } else {\r\n      range = numberRangeD;\r\n    }\r\n\r\n    let loopCount = 0;\r\n    const maxLoops = 100000;\r\n\r\n    for (let idx = 0; idx < 10; idx++) {\r\n      loopCount++;\r\n\r\n      let numA = Math.floor(Math.random() * range);\r\n      let numB = Math.floor(Math.random() * range);\r\n\r\n      if (loopCount >= maxLoops) {\r\n        break;\r\n      }\r\n\r\n      if (operationType === Operation.DIVIDE) {\r\n        if (numA === 1 || numB === 1) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n\r\n        while (numA === numB || numA % numB !== 0) {\r\n          loopCount++;\r\n          numB = Math.floor(Math.random() * range);\r\n\r\n          if (loopCount >= maxLoops) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (operationType === Operation.MULTIPLY || operationType === Operation.DIVIDE) {\r\n        if (numA === 0 || numB === 0) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if (operationType === Operation.MINUS || operationType === Operation.DIVIDE) {\r\n        if (numA < numB) {\r\n          idx = idx - 1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      const question = new MathQuestion(idx, numA, numB, operationType);\r\n      newQuestions.push(question);\r\n    }\r\n\r\n    setQuestions(newQuestions);\r\n  }, [numberRangeAM, numberRangeM, numberRangeD, operationType, resetFields]);\r\n\r\n  const getOperationIcon = React.useCallback((operation: Operation) => {\r\n    switch(operation) {\r\n      case Operation.MINUS:\r\n        return \"-\";\r\n      case Operation.MULTIPLY:\r\n        return \"x\";\r\n      case Operation.DIVIDE:\r\n        return \"/\";\r\n      default:\r\n        return \"+\";\r\n    }\r\n  }, []);\r\n\r\n  const isAnswerEnabled = React.useCallback((questionId: number) => {\r\n    return questionId === 0 || questionId < answers.length + 1;\r\n  }, [answers]);\r\n\r\n  const readAnswer = React.useCallback((questionId: number) => {\r\n    const answer = answers[questionId];\r\n    return answer || \"\";\r\n  }, [answers]);\r\n\r\n  const checkAnswer = React.useCallback((question: MathQuestion) => {\r\n    return Number(answers[question.id]) === Number(question.getResult());\r\n  }, [answers]);\r\n\r\n  const calculateCorrectAnswers = React.useCallback(() => {\r\n    const correctlyAnsweredQuestions = questions.filter((question) => checkAnswer(question));\r\n    return correctlyAnsweredQuestions.length;\r\n  }, [questions, checkAnswer]);\r\n\r\n  const checkAnswers = React.useCallback(() => {\r\n    const correctlyAnsweredQuestions = calculateCorrectAnswers();\r\n\r\n    if (correctlyAnsweredQuestions === questions.length) {\r\n      increaseHighScore(questions.length);\r\n      increaseCurrentScore(questions.length);\r\n    } else {\r\n      increaseHighScore(correctlyAnsweredQuestions);\r\n      resetCurrentScore();\r\n    }\r\n\r\n    setShowResults(true);\r\n  }, [questions, calculateCorrectAnswers, increaseHighScore, increaseCurrentScore, resetCurrentScore]);\r\n\r\n  React.useEffect(() => {\r\n    generateQuestions();\r\n  }, [operationType, generateQuestions]);\r\n\r\n  return (\r\n    <Box display=\"flex\" marginX={5}>\r\n      <Box flexDirection=\"column\">\r\n      {\r\n        questions.map((question) => (\r\n          <Box key={question.id} display=\"flex\" m={1.5} fontSize={26} fontWeight={700}>\r\n            <StyledQuestion>\r\n              <Box pr={1} width=\"80px\">{question.numberOne}</Box>\r\n              <Box pr={1} flexGrow={1}>{getOperationIcon(question.operation)}</Box>\r\n              <Box width=\"80px\">{question.numberTwo}</Box>\r\n            </StyledQuestion>\r\n            <StyledAnswerInput\r\n              type=\"number\"\r\n              value={readAnswer(question.id)}\r\n              onChange={(e) => handleChangeAnswer(question.id, e.target.value)}\r\n              disabled={!isAnswerEnabled(question.id)}\r\n            />\r\n            <StyledResult\r\n              width=\"100px\"\r\n              pl={3}\r\n              lineHeight=\"30px\"\r\n              correct={checkAnswer(question)}\r\n            >\r\n            {\r\n              showResults &&\r\n              <Box>{question.getResult()}</Box>\r\n            }\r\n            </StyledResult>\r\n          </Box>\r\n        ))\r\n      }\r\n      </Box>\r\n      <Box flexDirection=\"column\" margin=\"80px 0 0 50px\">\r\n        <StyledCheckAnswers\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => checkAnswers()}\r\n          disabled={showResults || answers.length < questions.length}\r\n        >\r\n          Check Answers\r\n        </StyledCheckAnswers>\r\n        <StyledNewQuestions\r\n            variant=\"contained\"\r\n            onClick={() => generateQuestions()}\r\n            disabled={!showResults}\r\n          >\r\n            New Questions\r\n        </StyledNewQuestions>\r\n        {\r\n          showResults &&\r\n          <Box marginTop=\"60px\" fontSize={40} fontWeight={600} textAlign=\"center\">Correct: {calculateCorrectAnswers()}</Box>\r\n        }\r\n        <Box marginTop=\"60px\" fontSize={40} fontWeight={600} textAlign=\"center\">Current total: {currentScore}</Box>\r\n        <Box marginTop=\"60px\" fontSize={40} fontWeight={600} textAlign=\"center\">High score: {highScore}</Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MathQuestions;\r\n\r\nconst StyledQuestion = styled(Box)`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin-right: 32px;\r\n  background: #d1dcf9;\r\n  border-radius: 25px;\r\n  font-size: 20px;\r\n  line-height: 35px;\r\n`\r\n\r\nconst StyledAnswerInput = styled.input`\r\n  width: 80px;\r\n  font-size: 20px;\r\n  border: 2px solid black;\r\n  border-radius: 25px;\r\n  outline: none;\r\n  padding: 5px;\r\n`\r\n\r\nconst StyledResult = styled(Box)<{correct: boolean}>`\r\n  color: ${props => props.correct ? \"green\" : \"red\"};\r\n`\r\n\r\nconst StyledCheckAnswers = styled(Button)`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-right: 20px;\r\n  border-radius: 25px;\r\n  text-transform: none;\r\n`\r\n\r\nconst StyledNewQuestions = styled(Button)`\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  border-radius: 25px;\r\n  text-transform: none;\r\n`\r\n","import { Box, FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport MathQuestions from \"components/mathQuestions.component\";\r\nimport { Operation } from \"model/mathQuestion\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype MathContainerProps = {\r\n  userId: string;\r\n  numberRangeAM: number;\r\n  numberRangeM: number;\r\n  numberRangeD: number;\r\n}\r\n\r\nconst MathContainer = ({ userId, numberRangeAM, numberRangeM, numberRangeD }: MathContainerProps) => {\r\n\r\n  const handleChange = React.useCallback((e: React.ChangeEvent<{value: unknown}>) => {\r\n    localStorage.setItem(\"mathSight-operationType-\" + userId, JSON.stringify(e.target.value));\r\n\r\n    setOperationType(e.target.value as Operation);\r\n  }, []);\r\n\r\n  const readCurrentScore = React.useCallback(() => {\r\n    const rawOperationType = localStorage.getItem(\"mathSight-operationType-\" + userId);\r\n\r\n    return !!rawOperationType ? JSON.parse(rawOperationType) as Operation : Operation.ADD;\r\n  }, [userId]);\r\n\r\n  const [operationType, setOperationType] = React.useState(readCurrentScore());\r\n\r\n  return (\r\n    <Box>\r\n      <Box marginX={8}>\r\n        <Box display=\"flex\">\r\n          <Box pr=\"50px\">\r\n            <h2>Mathsight</h2>\r\n          </Box>\r\n          <Box marginTop=\"10px\">\r\n            <FormControl variant=\"filled\">\r\n              <InputLabel id=\"demo-simple-select-filled-label\">Operation</InputLabel>\r\n              <StyledOperationSelect\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                value={operationType}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={Operation.ADD}>Add</MenuItem>\r\n                <MenuItem value={Operation.MINUS}>Minus</MenuItem>\r\n                <MenuItem value={Operation.MULTIPLY}>Multiply</MenuItem>\r\n                <MenuItem value={Operation.DIVIDE}>Divide</MenuItem>\r\n              </StyledOperationSelect>\r\n            </FormControl>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <MathQuestions\r\n        userId={userId}\r\n        numberRangeAM={numberRangeAM}\r\n        numberRangeM={numberRangeM}\r\n        numberRangeD={numberRangeD}\r\n        operationType={operationType}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MathContainer;\r\n\r\nconst StyledOperationSelect = styled(Select)`\r\n  width: 140px;\r\n`","import { Box } from '@material-ui/core';\r\nimport MathContainer from 'components/mathContainer.component';\r\n\r\nconst APage = () => {\r\n  return (\r\n    <Box>\r\n      <MathContainer userId=\"a\" numberRangeAM={10000} numberRangeM={12} numberRangeD={100} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default APage;","import { Box } from '@material-ui/core';\r\nimport MathContainer from 'components/mathContainer.component';\r\n\r\nconst SPage = () => {\r\n  return (\r\n    <Box>\r\n      <MathContainer userId=\"s\" numberRangeAM={20} numberRangeM={6} numberRangeD={20} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SPage;","import APage from \"pages/a\";\nimport SPage from \"pages/s\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/a\" exact component={APage} />\n          <Route path=\"/s\" exact component={SPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}